define(["swapp","socket-factory","/swapp/model/staticIdentifiers.js"],function(e){"use strict";e.registerDirective("swAddressBookPicker",["socket","$rootScope","swAppMessages",function(e,s,o){return{templateUrl:"/swapp/directives/address-book/address-book-picker-directive.tpl.html",restrict:"E",scope:{addressBookSelectedUser:"=ngModel"},link:function(t,n,a){t.addressBookConfig=a.addressBookOptions,t.appMessages=o,t.translations,t.address={},t.mainView=!0,t.showUserList=!1,t.newFormModel={},t.mainContactType={},t.addressBookTypes=[],t.subDropdownList=[],t.userList=[],t.isMainDropDownEditAllowed=!1,t.isSubDropDownEditAllowed=!1,t.isAddNewAllowed=!1,t.$on("fetchAddressBookPickerData",function(e,s){0===t.addressBookTypes.length?(t.addressBookConfig=angular.fromJson(s),r(),t.initData()):(t.addressBookConfig=angular.fromJson(s),d())});var d=function(){if(t.addressBookConfig.defaultContactType.length>0)for(var e=0;e<t.addressBookTypes.length;e++)t.addressBookTypes[e].name===t.addressBookConfig.defaultContactType&&(t.mainContactType._contactType=t.addressBookTypes[e]);else t.mainContactType._contactType=t.addressBookTypes[0];t.getSubDropdownByContactType(),r()},r=function(){_.size(t.addressBookConfig)&&(t.addressBookConfig.permissions?(t.isMainDropDownEditAllowed=t.addressBookConfig.permissions.isEditContactTypeAllowed,t.isSubDropDownEditAllowed=t.addressBookConfig.permissions.isEditIndustryTypeAllowed,t.isAddNewAllowed=t.addressBookConfig.permissions.isAddAllowed):(t.isMainDropDownEditAllowed=!0,t.isSubDropDownEditAllowed=!0,t.isAddNewAllowed=!0))};r(),t.initData=function(){var o={task_request:"Session/getTranslations",data:{language:s.userLoginDetailsVO.userLanguage,region:s.userLoginDetailsVO.regionId,displayPage:"dirAddressBook"}};e.get(o).then(function(e){t.translations=e.translations});var n={task_request:"Contact/getAddressTypes",data:{}};e.get(n).then(function(e){if(e.hasOwnProperty("address_types")){var s=-1;e=angular.fromJson(e);for(var o=0;o<e.address_types.length;o++)t.addressBookTypes.push({name:e.address_types[o],id:o+1}),t.addressBookConfig.defaultContactType.length>0&&t.addressBookTypes[o].name===t.addressBookConfig.defaultContactType&&(s=o);t.mainContactType._contactType=s>-1?t.addressBookTypes[s]:t.addressBookTypes[0],t.getSubDropdownByContactType()}})},t.clearFilter=function(){t.txtFilterUser=""},t.getSubDropdownByContactType=function(){t.clearFilter(),t.showUserList=!1,t.subDropdownList=[];var s={task_request:"Contact/getAddressSubTypes",data:{clientId:t.addressBookConfig.clientId,type:t.mainContactType._contactType.name.replace(/ /g,"")}};e.get(s).then(function(e){if(e.hasOwnProperty("result"))t.getUsers("");else{var s=[],o=-1;t.subDropdownList=[],e=angular.fromJson(e);for(var n=0;n<e.length;n++)s.push({name:e[n].license_type,id:n+1,license_type:e[n].license_type}),t.addressBookConfig.defaultIndustryType.length>0&&s[n].name===t.addressBookConfig.defaultIndustryType&&(o=n);t.subDropdownList=s,t.mainContactType._subContactType=o>-1?t.subDropdownList[o]:t.subDropdownList[0],t.getUsers(t.mainContactType._subContactType.name)}})},t.getUsers=function(s){t.clearFilter(),t.userList=[];var o={task_request:"Contact/getAddressBook",data:{clientId:t.addressBookConfig.clientId,licenseType:s,addressType:t.mainContactType._contactType.name.replace(/ /g,""),cts:t.addressBookConfig.cts}};e.get(o).then(function(e){if(e.hasOwnProperty("result"))t.showUserList=!1;else{e=angular.fromJson(e),t.userList=e,t.showUserList=!0}})},t.setKey=function(e){a.hasOwnProperty("uniqueId")&&(e.uniqueId=a.uniqueId),t.addressBookSelectedUser=e.cname,s.$broadcast("addressKeySet",e),a.modelBase&&a.modelSub&&(t.$parent[a.modelBase][a.modelSub]=e.cname)}}}}])});