define(["swapp","uiGrid","ui-bootstrap","socket-factory","/swapp/directives/address/address-directives.js","/swapp/directives/validation/arabic-numerals.js","/assets/vendor/csv-js/csv.js","/assets/vendor/pdfMake/index.js","/swapp/directives/address-book/address-book-picker-directive.js","/swapp/directives/format-currency/format-currency.js"],function(e){"use strict";e.registerController("mfPropContEngController",["$scope","uiGridConstants","socket","$rootScope","gettext","gettextCatalog",function(e,t,n,o,a,r){e.permissions=e.$parent.modPermissions,e.pageTranslations=e.$parent.modTranslations,e.exceptions=e.$parent.modExceptions,e.gridColActionMenu={},e.gridColActionMenu.isDisabled=!1,e.dateFormat=e.$parent.localTimeFormat,e.$on("selectedProperty",function(t,n){l(e.$parent.propertySelected.cts)});var i='<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" ng-mouseenter="getExternalScopes().rowHover(row)"  ng-mouseleave="getExternalScopes().rowHover(row)" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }"  ui-grid-cell></div>',s='<div class="ui-grid-cell-contents"><a ng-click="getExternalScopes().onEditClick(row, true);" ng-show="getExternalScopes().getPermissions(\'isUpdateAllowed\')">{{COL_FIELD | date:getExternalScopes().dateFormat}}</a></div>',d='<div class="ui-grid-cell-contents"><button><i class="glyphicon glyphicon-edit" ng-click="getExternalScopes().onEditClick(row);" ng-show="getExternalScopes().getPermissions(\'isUpdateAllowed\')"></i></button></div>',p='<div class="ui-grid-cell-contents"><button><i class="glyphicon glyphicon-trash" ng-click="getExternalScopes().deleteContEng(row);" ng-show="getExternalScopes().getPermissions(\'isUpdateAllowed\')"></i></button></div>';e.$on("setModTranslations",function(){e.pageTranslations=e.$parent.modTranslations?e.$parent.modTranslations:e.pageTranslations,e.pageTranslations&&e.configureGrid()}),e.scopeModel={onEditClick:function(a,r){e.currentlyRowBeingEdited=a,e.$parent.toggleOverlay(!0),e.updateContEng={},e.updateContEng.CTS=e.$parent.propertySelected.cts;var i=a,s="Property/setContractsAndEngagements";"new"===i?(e.newform=i,e.updateContEng.insertcne=1,e.updateContEng.Phone="",e.updateContEng.FixedOut=0,e.updateContEng.Appointed=0,e.updateContEng.name_fk=0,e.updateContEng.providedto="",e.updateContEng.BCM="",e.updateContEng.Name="",e.updateContEng.type="",e.updateContEng.term="",e.updateContEng.briefdescription="",e.updateContEng.status="",e.updateContEng.Duties="",e.updateContEng.description="",e.updateContEng.note="",e.updateContEng.StAddress="",e.updateContEng.City="",e.updateContEng.Postcode="",e.updateContEng.IssueInfoCert=!1,e.updateContEng.Fee="",e.updateContEng.NoOfPayments="",e.updateContEng.briefdescription="",o.$broadcast("updateAddress",{uniqueId:"address1",pc:"",locality:""}),e.origEditRow=angular.copy(e.updateContEng)):(e.updateContEng=angular.copy(i.entity),e.updateContEng.updatecne=1,e.origEditRow=angular.copy(e.updateContEng),e.suburb=e.updateContEng.City,e.postCodes=e.updateContEng.Postcode,o.$broadcast("updateAddress",{uniqueId:"address1",pc:e.postCodes,locality:e.suburb}));var d={task_request:"Property/getContractsAndEngagementsType",data:e.updateContEng};n.get(d).then(function(t){t=angular.fromJson(t),e.ntypeList=t}),e.$on("updateAddress",function(t,n){e.updateContEng.Postcode=n.pc,e.updateContEng.City=n.locality}),e.translateData=function(e,t,n){for(var o=0;o<=e.length-1;o++){var a=e[o][t];e[o][t]=n[a]}return e},e.saveContEng=function(){if(angular.equals(e.origEditRow,e.updateContEng))return void e.$parent.toggleOverlay(!1);var o=angular.copy(e.updateContEng);o.RecordID=null,o.Appointed=parseInt(o.Appointed,10),o.BCM=parseInt(o.BCM,10),o.Fee=parseInt(o.Fee,10),o.NoOfPayments=parseInt(o.NoOfPayments,10);var a={task_request:s,data:e.$parent.unformatDate(o)};n.get(a).then(function(n){1===n.status?("new"===i?(_.isArray(e.gridOptions.data)||(e.gridOptions.data=[]),e.updateContEng.RecordID=n.RecordID,e.gridOptions.data.push(e.$parent.formatDate(e.updateContEng))):i.entity=angular.copy(e.$parent.formatDate(e.updateContEng)),e.gridApi.core.notifyDataChange(e.gridApi.grid,t.dataChange.COLUMN),e.$parent.filterTrigger(e.gridOptions.data,e),"new"===i?e.$parent.addAlert("SUCCESS","INSERT"):e.$parent.addAlert("SUCCESS","UPDATE")):"new"===i?e.$parent.addAlert("ERROR","INSERT"):e.$parent.addAlert("ERROR","UPDATE")}),e.$parent.toggleOverlay(!1)}},dateFormat:e.dateFormat,getPermissions:function(t){return e.permissions[t]},deleteContEng:function(t){"editingPage"===t&&(t=e.currentlyRowBeingEdited);var o=a("Are you sure you want to delete this entry?");if(!confirm(r.getString(o)))return!1;for(var i,s=0;s<e.gridOptions.data.length;s++)if(t.entity.RecordID===e.gridOptions.data[s].RecordID){i=s;break}var d={task_request:"Property/removeContractsAndEngagements",data:t.entity};n.get(d).then(function(t){e.gridOptions.data.splice(i,1),e.$parent.filterTrigger(e.gridOptions.data,e)})},formatDate:function(t){return e.$parent.formatDate(t)},rowHover:function(e){e.isSelected=!e.isSelected}},e.configureGrid=function(){e.gridOptions={};var t={enableColumnResizing:!0,rowTemplate:i,paginationPageSizes:[10,25,50,100,150,200],paginationPageSize:10,enableGridMenu:!1,enableRowSelection:!1,enableRowHeaderSelection:!1,multiSelect:!1,exporterLinkLabel:"get your csv here",exporterCsvFilename:"contractsEngagements.csv",exporterPdfDefaultStyle:{fontSize:9},exporterPdfTableStyle:{margin:[10,10,10,10]},exporterPdfTableHeaderStyle:{fontSize:10,bold:!0,italics:!0,color:"red"},exporterPdfHeader:{text:"Contracts & Engagements",style:"headerStyle"},exporterPdfCustomFormatter:function(e){return e.styles.headerStyle={fontSize:22,bold:!0},e.styles.footerStyle={fontSize:10,bold:!0},e},exporterPdfOrientation:"portrait",exporterPdfPageSize:"LETTER",exporterPdfMaxGridWidth:500,exporterCsvLinkElement:angular.element(document.querySelectorAll(".custom-csv-link-location")),columnDefs:[{name:"contractdate",displayName:e.$parent.modTranslations.mfPropContEngContractDate,visible:!e.exceptions.mfPropContEngContractDate,width:"15%",cellTemplate:s,enableColumnMenu:!1,translationKey:"mfPropContContractDate"},{field:"type",displayName:e.$parent.modTranslations.mfPropContEngType,width:"15%",visible:!e.exceptions.mfPropContEngType,enableColumnMenu:!1,translationKey:"mfPropContEngType"},{field:"Name",displayName:e.$parent.modTranslations.mfPropContEngName,width:"15%",enableColumnMenu:!1,visible:!e.exceptions.mfPropContEngName,translationKey:"mfPropContEngName"},{field:"briefdescription",displayName:e.$parent.modTranslations.mfPropContEngBriefDesc,width:"45%",enableColumnMenu:!1,visible:!e.exceptions.mfPropContEngBriefDesc,translationKey:"mfPropContEngBriefDes"},{field:"edit",displayName:"",width:"5%",visible:e.permissions.isUpdateAllowed,enableColumnMenu:!1,cellTemplate:d,translationKey:"edit"},{field:"delete",displayName:"",width:"5%",visible:e.permissions.isDeleteAllowed,enableColumnMenu:!1,cellTemplate:p,translationKey:"delete"}]};e.gridOptions=t,e.gridOptions.onRegisterApi=function(t){e.gridApi=t}},e.configureGrid();var l=function(t){var o={task_request:"Property/getContractsAndEngagements",data:{cts:t}};n.get(o).then(function(t){t=angular.fromJson(t),t&&(t=e.$parent.formatDate(t),e.gridOptions.data=t,e.$parent.filterTrigger(e.gridOptions.data,e),e.hasLoaded=!0)})};l(e.$parent.propertySelected.cts),e["export"]=function(t){"csv"===t?e.gridApi.exporter.csvExport("all","all"):"pdf"===t&&e.gridApi.exporter.pdfExport("all","all")},e.addressPickerOpenStatus={isopen:!1},e.toggleDropdown=function(t){t.preventDefault(),t.stopPropagation(),e.addressPickerOpenStatus.isopen||(e.addressPickerOpenStatus.isopen=!e.addressPickerOpenStatus.isopen),o.$broadcast("fetchAddressBookPickerData",e.addressBookConfig)},e.$on("addressKeySet",function(t,n){e.updateContEng.Name=n.cname,e.updateContEng.StAddress=n.address,e.updateContEng.City=n.location,e.updateContEng.Postcode=n.postcode,e.$parent.initAddressDirective(e.updateContEng.Postcode,e.updateContEng.City,"address1"),e.addressPickerOpenStatus.isopen=!e.addressPickerOpenStatus.isopen}),e.addressBookConfig={cts:e.$parent.propertySelected.cts,clientId:o.userLoginDetailsVO.clientId,defaultContactType:"",defaultIndustryType:"",permissions:{isAddAllowed:!0,isEditContactTypeAllowed:!0,isEditIndustryTypeAllowed:!0}}}])});